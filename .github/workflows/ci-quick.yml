# CI Quick Checks - Fast feedback on code quality
name: CI Quick Checks

on:
  push:
    branches: [main, develop, 'feature/**']
  pull_request:
    branches: [main, develop]

jobs:
  quick-checks:
    name: Format and Lint
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      # Cache Rust dependencies for faster linting/formatting
      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            jimbot/memgraph/mage_modules -> target
            services/balatro-emulator -> target
            services/event-bus-rust -> target
            jimbot/infrastructure/resource_coordinator_rust -> target
          cache-on-failure: true
          shared-key: "rust-ci-quick"
          save-if: ${{ github.ref == 'refs/heads/main' }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Generate cache key from dependency files
        id: cache-key
        run: |
          # Create a hash of all dependency files to use as cache key
          # This ensures cache is invalidated when dependencies change
          DEPS_HASH=$(find . -name "Cargo.toml" -o -name "Cargo.lock" -o -name "requirements*.txt" -o -name "pyproject.toml" -o -name "package*.json" | sort | xargs cat 2>/dev/null | sha256sum | cut -d' ' -f1 || echo "no-deps")
          echo "deps-hash=${DEPS_HASH}" >> $GITHUB_OUTPUT
          echo "Cache key: ${DEPS_HASH}"
          
      - name: Build CI Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.ci-unified
          target: ci
          tags: jimbot-ci:latest
          cache-from: type=gha,scope=buildkit-quick-${{ steps.cache-key.outputs.deps-hash }}
          cache-to: type=gha,mode=max,scope=buildkit-quick-${{ steps.cache-key.outputs.deps-hash }}
          load: true
          build-args: |
            CACHEBUST=${{ steps.cache-key.outputs.deps-hash }}
          
      - name: Run Quick Checks
        run: |
          # Mount cargo cache directories into Docker container
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -v $HOME/.cargo/registry:/root/.cargo/registry \
            -v $HOME/.cargo/git:/root/.cargo/git \
            jimbot-ci:latest bash -c "
            set -e
            echo '=== Python Format Check ==='
            black --check /workspace/jimbot /workspace/scripts /workspace/services || true
            isort --check-only /workspace/jimbot /workspace/scripts /workspace/services || true
            
            echo '=== Python Linting ==='
            flake8 /workspace --max-line-length=120 --exclude=.git,__pycache__,venv || true
            pylint /workspace/jimbot --fail-under=8.0 || true
            mypy /workspace/jimbot --ignore-missing-imports || true
            
            echo '=== Rust Format Check ==='
            if [ -f /workspace/Cargo.toml ]; then
              cd /workspace && cargo fmt --all -- --check || true
            fi
            
            echo '=== Rust Linting ==='
            if [ -f /workspace/Cargo.toml ]; then
              cargo clippy --all-targets --all-features -- -D warnings || true
            fi
            
            echo '=== Security Audit ==='
            if [ -f /workspace/Cargo.toml ]; then
              cargo audit || true
            fi
            
            echo 'Quick checks completed!'
          "
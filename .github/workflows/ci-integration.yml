# CI Integration Tests - Full system integration testing
name: CI Integration Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  integration:
    name: Full Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build CI Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.ci-unified
          target: ci
          tags: jimbot-ci:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          load: true
          
      - name: Start All Services
        run: |
          # Use the fixed docker-compose.ci.yml
          if [ -f docker-compose.ci.yml ]; then
            docker compose -f docker-compose.ci.yml up -d
          else
            echo "docker-compose.ci.yml not found, skipping service startup"
          fi
          
      - name: Wait for Services
        run: |
          echo "Waiting for services to be healthy..."
          for i in {1..60}; do
            if docker ps | grep -q healthy; then
              echo "Services are healthy!"
              break
            fi
            echo "Waiting for services... ($i/60)"
            sleep 5
          done
          docker ps
      
      - name: Run Integration Tests
        run: |
          docker run --rm \
            --network host \
            -v ${{ github.workspace }}:/workspace \
            -e CI=true \
            -e PYTHONPATH=/workspace \
            -e QUESTDB_HOST=localhost \
            -e MEMGRAPH_HOST=localhost \
            jimbot-ci:latest bash -c "
              echo '=== Full Integration Test Suite ==='
              cd /workspace
              
              # Python integration tests
              if [ -d jimbot/tests/integration ]; then
                echo '--- Python Integration Tests ---'
                pytest jimbot/tests/integration -v || true
              fi
              
              # Rust integration tests
              if [ -f Cargo.toml ]; then
                echo '--- Rust Integration Tests ---'
                cargo test --test '*integration*' -- --test-threads=1 || true
              fi
              
              # Service-specific tests
              for service in services/*/; do
                if [ -f \"\$service/Cargo.toml\" ]; then
                  echo \"--- Testing \$(basename \$service) ---\"
                  cd \$service
                  cargo test --verbose || true
                  cd /workspace
                fi
              done
              
              echo 'Integration tests completed!'
            "
      
      - name: Collect Logs
        if: always()
        run: |
          mkdir -p logs
          docker compose -f docker-compose.ci.yml logs > logs/docker-compose.log 2>&1 || true
          docker ps -a > logs/containers.log || true
          
      - name: Upload Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-logs
          path: logs/
          retention-days: 7
      
      - name: Cleanup
        if: always()
        run: |
          docker compose -f docker-compose.ci.yml down -v || true
          docker system prune -f || true
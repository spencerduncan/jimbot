name: Scheduled Integration Tests

on:
  schedule:
    # Run every 4 hours
    - cron: '0 */4 * * *'
  workflow_dispatch:  # Allow manual triggering

env:
  CREATE_GITHUB_ISSUES: false  # Disable automatic issue creation to prevent spam

jobs:
  integration-tests:
    name: Full Integration Test Suite
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker
        uses: docker/setup-buildx-action@v3
      
      - name: Build CI Docker image
        run: |
          docker build -f docker/Dockerfile.ci-unified -t jimbot-ci:latest .
      
      - name: Run full integration test suite
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            --network host \
            jimbot-ci:latest \
            bash ci/scripts/run-integration-tests.sh
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results-${{ github.run_number }}
          path: |
            services/*/target/debug/deps/*.json
            services/*/test-results/
            **/test-results/
      
  notify-failures:
    name: Notify on Failures
    needs: integration-tests
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Check for existing issue or create new one
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            // Check if issue creation is disabled
            if (process.env.CREATE_GITHUB_ISSUES === 'false') {
              console.log('Issue creation is disabled via CREATE_GITHUB_ISSUES environment variable');
              return;
            }
            
            // Check for existing open issues
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'ci-failure,integration-tests',
              per_page: 100
            });
            
            const existingIssue = issues.data.find(issue => 
              issue.title.includes('Scheduled Integration Tests Failed')
            );
            
            const date = new Date().toISOString();
            const workflowUrl = `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            
            if (existingIssue) {
              // Update existing issue
              console.log(`Found existing issue #${existingIssue.number}, updating it`);
              
              // Add comment to existing issue
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: existingIssue.number,
                body: `ðŸ”´ Integration tests failed again at ${date}\n\nWorkflow run: ${workflowUrl}`
              });
              
              // Update issue body with latest failure
              const currentBody = existingIssue.body || '';
              const updateSection = `\n\n---\n\n## Update - ${date}\n\nTests failed again. Latest workflow run: ${workflowUrl}`;
              
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: existingIssue.number,
                body: currentBody + updateSection
              });
              
            } else {
              // Create new issue
              const issue = await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `Scheduled Integration Tests Failed - ${date}`,
                body: `The scheduled integration tests failed at ${date}.\n\nWorkflow run: ${workflowUrl}\n\n## Details\n\nThis issue will be automatically updated if the tests continue to fail. Once the tests pass, please close this issue.`,
                labels: ['bug', 'ci-failure', 'integration-tests']
              });
              console.log(`Created issue #${issue.data.number}`);
            }
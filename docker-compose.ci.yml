# docker-compose.ci.yml
# Updated CI configuration with improved QuestDB health checks and service initialization
version: '3.8'

services:
  ci-runner:
    build:
      context: .
      dockerfile: Dockerfile.ci-unified
      target: ci
    volumes:
      - .:/workspace:cached
      - cargo-cache:/root/.cargo/registry
      - pip-cache:/root/.cache/pip
    depends_on:
      questdb:
        condition: service_healthy
      memgraph:
        condition: service_healthy
    environment:
      CI: "true"
      QUESTDB_HOST: questdb
      MEMGRAPH_HOST: memgraph
      RUST_BACKTRACE: 1
      PYTHONPATH: "/workspace"
    networks:
      - ci-network
    command: |
      bash -c "
        echo '=== Running CI Tests ==='
        echo 'Running Python tests...'
        python -m pytest tests/ -v --cov=jimbot || true
        echo 'Running Rust tests...'
        cargo test --all || true
        echo 'Running format checks...'
        python -m black --check . || true
        python -m isort --check-only . || true
        cargo fmt --all -- --check || true
        echo 'Running lint checks...'
        python -m flake8 . || true
        cargo clippy --all -- -D warnings || true
        echo 'CI tests completed!'
      "

  questdb:
    image: questdb/questdb:7.3.10
    ports:
      - "9000:9000"
      - "8812:8812"
    environment:
      QDB_CAIRO_COMMIT_LAG: 1000
      QDB_CAIRO_MAX_UNCOMMITTED_ROWS: 1000
      QDB_PG_ENABLED: "true"
      QDB_HTTP_ENABLED: "true"
      QDB_TELEMETRY_ENABLED: "false"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/exec?query=SELECT%201"]
      interval: 5s
      timeout: 10s
      retries: 20
      start_period: 40s
    volumes:
      - questdb-data:/var/lib/questdb
    networks:
      - ci-network
    restart: unless-stopped

  memgraph:
    image: memgraph/memgraph-platform:2.15.0
    ports:
      - "7687:7687"
      - "3000:3000"
    environment:
      MEMGRAPH_USER: ""
      MEMGRAPH_PASSWORD: ""
    healthcheck:
      test: ["CMD-SHELL", "echo 'MATCH (n) RETURN n LIMIT 1;' | mgconsole --host localhost --port 7687 || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 20
      start_period: 30s
    volumes:
      - memgraph-data:/var/lib/memgraph
    networks:
      - ci-network
    restart: unless-stopped

  # Service for quick health checks
  health-checker:
    image: alpine:latest
    depends_on:
      questdb:
        condition: service_healthy
      memgraph:
        condition: service_healthy
    command: |
      sh -c '
        apk add --no-cache curl
        echo "=== Health Check: All Services ==="
        echo "Checking QuestDB..."
        curl -f http://questdb:9000/exec?query=SELECT%201 || exit 1
        echo "QuestDB is healthy!"
        
        echo "Checking Memgraph HTTP endpoint..."
        curl -f http://memgraph:3000 || exit 1
        echo "Memgraph is healthy!"
        
        echo "All services are healthy and ready!"
      '
    networks:
      - ci-network
    profiles:
      - health-check

volumes:
  cargo-cache:
    driver: local
  pip-cache:
    driver: local
  questdb-data:
    driver: local
  memgraph-data:
    driver: local

networks:
  ci-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

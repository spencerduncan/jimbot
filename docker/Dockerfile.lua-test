# Dockerfile for Lua Testing Environment
# Provides a containerized environment for running Lua tests in CI

FROM ubuntu:22.04 AS base

# Prevent interactive prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive
ENV LUA_VERSION=5.4

# Install system dependencies for Lua development
RUN apt-get update && apt-get install -y \
    # Build essentials
    build-essential \
    gcc \
    make \
    # Lua runtime and development headers
    lua5.4 \
    liblua5.4-dev \
    luarocks \
    # Additional tools
    curl \
    wget \
    git \
    unzip \
    # Debugging and utility tools
    strace \
    gdb \
    valgrind \
    # Text processing tools
    jq \
    && rm -rf /var/lib/apt/lists/*

# Install Lua testing and development tools
RUN luarocks install busted && \
    luarocks install luacheck && \
    luarocks install luacov && \
    luarocks install luacov-reporter-lcov && \
    luarocks install ldoc

# Download and install StyLua for code formatting
RUN wget -q https://github.com/JohnnyMorganz/StyLua/releases/download/v0.20.0/stylua-linux-x86_64.zip && \
    unzip stylua-linux-x86_64.zip && \
    chmod +x stylua && \
    mv stylua /usr/local/bin/ && \
    rm stylua-linux-x86_64.zip

# Create dedicated user for running tests
RUN useradd -m -s /bin/bash luatest

# Set working directory
WORKDIR /app

# Copy test configuration files
COPY .luacheckrc .stylua.toml ./
COPY tests/ ./tests/

# Debug: Show what files are available in build context
RUN echo "=== BUILD CONTEXT DEBUG ===" && \
    pwd && \
    echo "Current directory contents:" && \
    ls -la && \
    echo "Looking for docker/scripts directory:" && \
    ls -la docker/ 2>/dev/null || echo "docker/ directory not found" && \
    ls -la docker/scripts/ 2>/dev/null || echo "docker/scripts/ directory not found" && \
    echo "=== END BUILD CONTEXT DEBUG ==="

# Verify script files exist before copying
RUN test -f docker/scripts/run_lua_tests.sh || (echo "ERROR: docker/scripts/run_lua_tests.sh not found in build context" && exit 1)
RUN test -f docker/scripts/run_lua_tests_dev.sh || (echo "ERROR: docker/scripts/run_lua_tests_dev.sh not found in build context" && exit 1)

# Copy test runner scripts to /usr/local/bin (not affected by volume mounts)
COPY docker/scripts/run_lua_tests.sh /usr/local/bin/run_lua_tests.sh
COPY docker/scripts/run_lua_tests_dev.sh /usr/local/bin/run_lua_tests_dev.sh

# Make the scripts executable and verify they exist
RUN chmod +x /usr/local/bin/run_lua_tests.sh /usr/local/bin/run_lua_tests_dev.sh && \
    ls -la /usr/local/bin/run_lua_tests*.sh && \
    echo "=== SCRIPT FILES SUCCESSFULLY COPIED AND MADE EXECUTABLE ==="

# Set ownership for test user
RUN chown -R luatest:luatest /app

# Switch to test user
USER luatest

# Default command runs all tests
CMD ["/usr/local/bin/run_lua_tests.sh"]

# Development stage for interactive debugging
FROM base AS dev

# Switch back to root for development tools
USER root

# Install additional development tools
RUN apt-get update && apt-get install -y \
    vim \
    nano \
    less \
    htop \
    tree \
    man-db \
    && rm -rf /var/lib/apt/lists/*

# Switch back to test user
USER luatest

# Development command keeps container alive
CMD ["/usr/local/bin/run_lua_tests_dev.sh"]
# Dockerfile Template for Rust Components
# This is a template file. Copy this to your Rust component directory and customize as needed.

# Build stage
FROM rust:1.88-slim as builder

# Install build dependencies with BuildKit cache mount for apt
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt,sharing=locked \
    apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /usr/src/app

# Copy manifests
COPY Cargo.toml Cargo.lock ./

# Create a dummy main.rs to build dependencies
RUN mkdir src && echo "fn main() {}" > src/main.rs

# Build dependencies (this will be cached)
RUN cargo build --release && rm -rf src

# Copy source code
COPY src ./src

# Build the actual application
# Remove the dummy target directory first
RUN rm -rf target/release/deps/$(echo $CARGO_PKG_NAME | tr '-' '_')*
RUN cargo build --release

# Runtime stage
FROM debian:bullseye-slim

# Install runtime dependencies with BuildKit cache mount for apt
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt,sharing=locked \
    apt-get update && apt-get install -y \
    ca-certificates \
    libssl1.1 \
    libpq5 \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN useradd -m -u 1000 appuser && \
    mkdir -p /app && \
    chown appuser:appuser /app

# Copy the binary from builder stage
COPY --from=builder /usr/src/app/target/release/your-app-name /app/

# Switch to non-root user
USER appuser
WORKDIR /app

# Expose port (customize as needed)
EXPOSE 8080

# Health check (customize as needed)
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Set runtime configuration
ENV RUST_LOG=info
ENV RUST_BACKTRACE=1

# Command to run the application
CMD ["./your-app-name"]

# Labels for better maintainability
LABEL maintainer="spencerduncan"
LABEL version="1.0"
LABEL description="Rust application for Jimbot project"
LABEL org.opencontainers.image.source="https://github.com/spencerduncan/jimbot-main"
LABEL org.opencontainers.image.licenses="MIT"
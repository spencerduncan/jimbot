FROM nvidia/cuda:12.2.2-cudnn8-devel-ubuntu22.04

# Prevent interactive prompts
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    software-properties-common \
    && add-apt-repository ppa:deadsnakes/ppa \
    && apt-get update && apt-get install -y \
    # Python 3.13
    python3.13 python3.13-dev python3.13-venv python3.13-distutils \
    # Keep Python 3.10 for compatibility
    python3.10 python3.10-dev python3.10-venv python3-pip \
    # Lua
    lua5.4 liblua5.4-dev luarocks \
    # C++ development
    build-essential cmake clang clang-tidy clang-format \
    cppcheck lcov \
    # Protocol Buffers
    protobuf-compiler libprotobuf-dev \
    # Development tools
    git curl wget vim nano htop \
    docker.io \
    # GPU tools
    nvidia-utils-535 \
    && rm -rf /var/lib/apt/lists/*

# Set Python 3.13 as default
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.13 1 && \
    update-alternatives --install /usr/bin/python python /usr/bin/python3.13 1

# Install pip for Python 3.13
RUN curl -sS https://bootstrap.pypa.io/get-pip.py | python3.13

# Install Python development tools
RUN python3.13 -m pip install --upgrade pip setuptools wheel && \
    python3.13 -m pip install \
    black isort flake8 mypy pylint bandit safety \
    pytest pytest-cov pytest-asyncio pytest-benchmark \
    pre-commit \
    jupyter notebook ipython \
    torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121

# Install Lua development tools
RUN luarocks install luacheck && \
    luarocks install luacov && \
    luarocks install busted

# Install stylua
RUN wget https://github.com/JohnnyMorganz/StyLua/releases/latest/download/stylua-linux.zip && \
    unzip stylua-linux.zip && \
    chmod +x stylua && \
    mv stylua /usr/local/bin/ && \
    rm stylua-linux.zip

# Install buf for Protocol Buffers
RUN curl -sSL https://github.com/bufbuild/buf/releases/latest/download/buf-Linux-x86_64 -o /usr/local/bin/buf && \
    chmod +x /usr/local/bin/buf

# Install Go for additional tools
RUN wget https://go.dev/dl/go1.21.5.linux-amd64.tar.gz && \
    tar -C /usr/local -xzf go1.21.5.linux-amd64.tar.gz && \
    rm go1.21.5.linux-amd64.tar.gz
ENV PATH=$PATH:/usr/local/go/bin

# Install additional development tools
RUN go install github.com/bufbuild/buf/cmd/buf@latest && \
    go install github.com/fullstorydev/grpcurl/cmd/grpcurl@latest

# Create workspace directory
WORKDIR /workspace

# Set up entrypoint
COPY scripts/docker-entrypoint.sh /docker-entrypoint.sh
RUN chmod +x /docker-entrypoint.sh

ENTRYPOINT ["/docker-entrypoint.sh"]
CMD ["/bin/bash"]